import mapboxgl from 'mapbox-gl';
import { timeSince } from './time_since.js';
import { formatNumber } from './format_number.js';

const runningRoute = gon.running_route
let forrestDistance = gon.running_distance;
let turfRoute = turf.lineString(runningRoute);
let turfRoutePosition = turf.along(turfRoute, forrestDistance, {units: 'miles'});


const mapElement = document.getElementById('map');
mapboxgl.accessToken = mapElement.dataset.mapboxApiKey;

const map = new mapboxgl.Map({
  container: 'map',
  style: 'mapbox://styles/mapbox/light-v9',
  center: [-95.976991, 35.6122],
  zoom: 3.8,
  pitch: 25,
});

let bearingSkew

// sets route
map.on('load', function () {
  map.addLayer({
    "id": "route",
    "type": "line",
    "source": {
      "type": "geojson",
      "data": {
        "type": "Feature",
        "properties": {},
        "geometry": {
          "type": "LineString",
          "coordinates": runningRoute
        }
      }
    },
    "layout": {
      "line-join": "round",
      "line-cap": "round"
    },
    "paint": {
      "line-color": '#DC143C',
      "line-width": 1.6,
      'line-dasharray': [1.2, 3],
    }
  });

  // creates div element (styled in home.sccs)
  var el = document.createElement('div');
  el.className = `marker marker-${gon.starting_position}`;

  // create popup
  var popup = new mapboxgl.Popup({ offset: [0, -42], className: "forrest-popup" })
    .setText(gon.forrest_quote);

  // make a marker div and add to the map
  const forrestMarker = new mapboxgl.Marker(el, {anchor: 'bottom'})
  .setLngLat(turfRoutePosition.geometry.coordinates)
  .addTo(map)
  .setPopup(popup);

  console.log(turfRoutePosition.geometry.coordinates)

  // if small screen, fly to marker
  if (window.innerWidth <= 768) {
    map.panTo(turfRoutePosition.geometry.coordinates, {zoom: 4.2})
        // speed: 0.2
    console.log('less than 768!')
  }

  // when a new tweet is created
  App.messages = App.cable.subscriptions.create('WebNotificationsChannel', {
    received: function(data) {

      // sets old latitude
      const oldLat = forrestMarker.getLngLat().lng

      // moves forrest marker
      const coordinates = turf.along(turfRoute, data.distance, {units: 'miles'}).geometry.coordinates
      forrestMarker.setLngLat(coordinates)

      // sets marker image direction & saves to db
      const newLat = forrestMarker.getLngLat().lng

      if (oldLat > newLat) {
        el.classList.remove('marker-right')
        el.classList.add('marker-left')

        bearingSkew = -18

        $.ajax({
            type: 'POST',
            url: "/direction/left",
            authenticity_token: true,
            headers: { 'X-CSRF-Token': Rails.csrfToken() },
        });
        }

      if (newLat > oldLat) {
        el.classList.remove('marker-left')
        el.classList.add('marker-right')

        bearingSkew = 18

        $.ajax({
            type: 'POST',
            url: "/direction/right",
            authenticity_token: true,
            headers: { 'X-CSRF-Token': Rails.csrfToken() },
        });
      }

      // sets tweet to push
      const newTweet = `
      <div class="tweet-container tweet-animation">
      <div class="tweet-avatar" style="background-image: url(${data.avatar}) "></div>
      <div class="tweet-content">
      <div class="tweet-mile">
        <i class="fas fa-location-arrow"></i> ${formatNumber(data.mile)}
      </div>
      <div>
      <div class="tweet-flex">
      <div class="tweet-name">
      ${data.name}&nbsp&nbsp
      </div>
      <div class="tweet-screen-name">
      @${data.screen_name}&nbsp&nbsp
      </div>
      <div class="tweet-date">
      Â·&nbsp&nbsp ${timeSince(data.date)} ago
      </div>
      </div>
      </div>
      <div class="tweet-message">
      ${data.message}
      </div>
      ${data.photo === '' ? '' : `<div class="tweet-photo" style="background-image: url(${data.photo})"></div>`}
      </div>
      </div>`

      // popup quote
      if (popup.isOpen()) {
        forrestMarker.togglePopup()
      }
      popup.setText(data.quote)
      forrestMarker.togglePopup()

      // pushes tweet
      const tweets = document.querySelector('.home-tweet-container')
      tweets.insertAdjacentHTML("afterbegin", newTweet);

      // updates distance remaining
      const distance = document.querySelector(".current-distance")
      distance.innerText = formatNumber(parseInt(data.distance_remaining))

      // map animation
      map.flyTo({
        center: coordinates,
        zoom: 5.5,
        bearing: bearingSkew,
        speed: 0.2
      });
      // map.panTo(coordinates)
    }
  })
});
